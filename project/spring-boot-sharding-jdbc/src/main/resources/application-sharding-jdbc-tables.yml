sharding:
  jdbc:
    datasource:
      names: db-master,db-slave  # 名称之间不可以出现空格
      db-master: #org.apache.tomcat.jdbc.pool.DataSource
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.140.77:3306/cool?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
        #最大连接数
        maxPoolSize: 20
      db-slave: # 配置第一个从库
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://192.168.140.159:3306/cool?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT
        username: root
        password: 123456
        maxPoolSize: 20
    config:
      sharding:
        tables:
          User:
            actual-data-nodes: ds_0.User_$->{0..3}
            table-strategy:
              standard:
                sharding-column: id
                precise-algorithm-class-name: com.wujk.springbootshardingjdbc.MyPreciseShardingAlgorithm
        master-slave-rules:
          ds_0:
            master-data-source-name: db-master
            slave-data-source-names: db-slave
    props:
      sql: # 开启SQL显示，默认值: false，注意：仅配置读写分离时不会打印日志！！！
        show: true

#sharding.jdbc.config.sharding.tables.user.actual-data-nodes: ds_0.User_$->{0..3}
#sharding.jdbc.config.sharding.tables.user.table-strategy.standard.sharding-column: id
#sharding.jdbc.config.sharding.tables.user.table-strategy.standard.precise-algorithm-class-name: com.wujk.springbootshardingjdbc.MyPreciseShardingAlgorithm
#sharding.jdbc.config.sharding.tables.user.table-strategy.inline.sharding-column=id
#sharding.jdbc.config.sharding.tables.user.table-strategy.inline.algorithm-expression=user_${id.longValue() % 4}

#sharding.jdbc.config.sharding.master-slave-rules.ds_0.master-data-source-name: db-master
#sharding.jdbc.config.sharding.master-slave-rules.ds_0.slave-data-source-names: db-slave